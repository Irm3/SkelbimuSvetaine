@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model PaginatedList<SkelbimuSvetaine.Models.Product>

<style>
    .truncate {
        width: 900px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

@*<session-name name="@User.Identity.Name">Session["keyword"] -> @HttpContextAccessor.HttpContext.Session.GetInt32("keyword")</session-name>*@

@{
    ViewData["Title"] = "Index";
}

@{  
    string role = "";
    if (User.Identity.Name != null)
    {
        SkelbimuSvetaine.Models.ld1_gynimasContext db = new ld1_gynimasContext();
        role = db.Users.FirstOrDefault(x => x.Username == User.Identity.Name).Role;
    }

}

<h1 class="menu-label title is-size-5">Skelbimai</h1>

@{
    var allDisabled = "is-success";
    if (@ViewData["CurrentFilter"] as string == null)
    {
        allDisabled = "disabled";
    }
}

<form asp-action="Index" method="get">
    <div class="level">
        <div class="level-item">
            <div class="field has-addons">
                <p class="control">
                    <input placeholder="Ieškoti skelbimo" type="text" name="SearchString" class="input" value="@ViewData["CurrentFilter"]" />
                </p>
                <p class="control">
                    <button class="button is-success" asp-action="Index" type="submit">
                        Paieška
                    </button>
                    <a class="button @allDisabled" asp-action="Index">Atgal į sąrašą</a>
                    @if (role != "")
                    {
                        <a class="button is-success" asp-action="Create">+ Naujas Skelbimas</a>
                    }
                </p>
            </div>
        </div>
    </div>
</form>


@if (Model == null)
{
    <th>
        <h1 class="menu-label title is-size-5">Nėra skelbimų</h1>
    </th>
}

else
    @foreach (var item in Model)
    {
        <div class="box">
            <div class="columns">
                <div class="column is-2">
                    @{
                        var imgsrc = "";
                        if (item.Image != null)
                        {
                            var base64 = Convert.ToBase64String(item.Image);
                            imgsrc = string.Format("data:image/gif;base64,{0}", base64);
                        }
                        else
                            imgsrc = string.Format("/Images/notfound.jpg");
                    }
                    <a asp-route-id="@item.Id" asp-action="Details"><img src='@imgsrc' style="max-width:100px; max-height:100px; border:2px;" /></a>
                </div>

                <div class="column">
                    <h1 class="has-text-left has-text-weight-bold is-size-4">
                        @Html.DisplayFor(modelItem => item.Name)
                    </h1>
                    <p class="truncate has-text-left">
                        @Html.DisplayFor(modelItem => item.Description)
                    </p>
                    <p class="has-text-right ">
                        Skelbėjas: @Html.DisplayFor(modelItem => item.User.Username)
                    </p>
                    <div class="columns">
                        <div class="column">
                            <h3 class="has-text-left has-text-weight-bold is-size-5">
                                @Html.DisplayFor(modelItem => item.Price) $
                            </h3>
                        </div>
                        <div class="column">
                            <p class="has-text-right ">
                                Įkėlimo data: @Html.DisplayFor(modelItem => item.CreatedTimestamp)
                            </p>
                        </div>
                        @if (role == "admin" || User.Identity.Name == item.User.Username)
                        {
                        <div class="column">
                            <a class="button is-danger" asp-action="Delete" asp-route-id="@item.Id">Šalinti</a>
                            <a class="button is-danger" asp-action="Edit" asp-route-id="@item.Id">Redaguoti</a>
                        </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    }



@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "is-success";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "is-success";
}

@if (Model != null)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="button @prevDisabled">
        Ankstesnis
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="button @nextDisabled ">
        Kitas
    </a>
}

